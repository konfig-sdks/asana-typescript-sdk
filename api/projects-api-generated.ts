/* tslint:disable */
/* eslint-disable */
/*
Asana

This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { fromBuffer } from "file-type/browser"
const FormData = require("form-data")
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { AddCustomFieldSettingRequest } from '../models';
// @ts-ignore
import { AddFollowersRequest } from '../models';
// @ts-ignore
import { AddMembersRequest } from '../models';
// @ts-ignore
import { ErrorResponse } from '../models';
// @ts-ignore
import { ProjectDuplicateRequest } from '../models';
// @ts-ignore
import { ProjectRequest } from '../models';
// @ts-ignore
import { ProjectSaveAsTemplateRequest } from '../models';
// @ts-ignore
import { ProjectUpdateRequest } from '../models';
// @ts-ignore
import { ProjectsAddCustomFieldSettingRequest } from '../models';
// @ts-ignore
import { ProjectsAddCustomFieldSettingResponse } from '../models';
// @ts-ignore
import { ProjectsAddFollowersToProjectRequest } from '../models';
// @ts-ignore
import { ProjectsAddFollowersToProjectResponse } from '../models';
// @ts-ignore
import { ProjectsAddMembersToProjectRequest } from '../models';
// @ts-ignore
import { ProjectsAddMembersToProjectResponse } from '../models';
// @ts-ignore
import { ProjectsCreateInWorkspaceRequest } from '../models';
// @ts-ignore
import { ProjectsCreateInWorkspaceResponse } from '../models';
// @ts-ignore
import { ProjectsCreateNewProjectRecordRequest } from '../models';
// @ts-ignore
import { ProjectsCreateNewProjectRecordResponse } from '../models';
// @ts-ignore
import { ProjectsCreateProjectForTeamRequest } from '../models';
// @ts-ignore
import { ProjectsCreateProjectForTeamResponse } from '../models';
// @ts-ignore
import { ProjectsCreateProjectTemplateJobRequest } from '../models';
// @ts-ignore
import { ProjectsCreateProjectTemplateJobResponse } from '../models';
// @ts-ignore
import { ProjectsDeleteProjectByIdResponse } from '../models';
// @ts-ignore
import { ProjectsDuplicateProjectJobRequest } from '../models';
// @ts-ignore
import { ProjectsDuplicateProjectJobResponse } from '../models';
// @ts-ignore
import { ProjectsGetAllInWorkspaceResponse } from '../models';
// @ts-ignore
import { ProjectsGetProjectRecordResponse } from '../models';
// @ts-ignore
import { ProjectsGetTaskCountsResponse } from '../models';
// @ts-ignore
import { ProjectsGetTeamProjectsResponse } from '../models';
// @ts-ignore
import { ProjectsListMultipleResponse } from '../models';
// @ts-ignore
import { ProjectsRemoveCustomFieldRequest } from '../models';
// @ts-ignore
import { ProjectsRemoveCustomFieldResponse } from '../models';
// @ts-ignore
import { ProjectsRemoveMembersFromProjectRequest } from '../models';
// @ts-ignore
import { ProjectsRemoveMembersFromProjectResponse } from '../models';
// @ts-ignore
import { ProjectsRemoveProjectFollowersRequest } from '../models';
// @ts-ignore
import { ProjectsRemoveProjectFollowersResponse } from '../models';
// @ts-ignore
import { ProjectsTaskProjectsListResponse } from '../models';
// @ts-ignore
import { ProjectsUpdateProjectRecordRequest } from '../models';
// @ts-ignore
import { ProjectsUpdateProjectRecordResponse } from '../models';
// @ts-ignore
import { RemoveCustomFieldSettingRequest } from '../models';
// @ts-ignore
import { RemoveFollowersRequest } from '../models';
// @ts-ignore
import { RemoveMembersRequest } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * ProjectsApi - axios parameter creator
 * @export
 */
export const ProjectsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.
         * @summary Add a custom field to a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsAddCustomFieldSettingRequest} projectsAddCustomFieldSettingRequest Information about the custom field setting.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'parent' | 'parent.name' | 'project' | 'project.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addCustomFieldSetting: async (projectGid: string, projectsAddCustomFieldSettingRequest: ProjectsAddCustomFieldSettingRequest, optPretty?: boolean, optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'parent' | 'parent.name' | 'project' | 'project.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('addCustomFieldSetting', 'projectGid', projectGid)
            // verify required parameter 'projectsAddCustomFieldSettingRequest' is not null or undefined
            assertParamExists('addCustomFieldSetting', 'projectsAddCustomFieldSettingRequest', projectsAddCustomFieldSettingRequest)
            const localVarPath = `/projects/{project_gid}/addCustomFieldSetting`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsAddCustomFieldSettingRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/addCustomFieldSetting',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsAddCustomFieldSettingRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation. Returns the updated project record.
         * @summary Add followers to a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsAddFollowersToProjectRequest} projectsAddFollowersToProjectRequest Information about the followers being added.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFollowersToProject: async (projectGid: string, projectsAddFollowersToProjectRequest: ProjectsAddFollowersToProjectRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('addFollowersToProject', 'projectGid', projectGid)
            // verify required parameter 'projectsAddFollowersToProjectRequest' is not null or undefined
            assertParamExists('addFollowersToProject', 'projectsAddFollowersToProjectRequest', projectsAddFollowersToProjectRequest)
            const localVarPath = `/projects/{project_gid}/addFollowers`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsAddFollowersToProjectRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/addFollowers',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsAddFollowersToProjectRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user\'s default notification settings (i.e., in the \"Notifcations\" tab of \"My Profile Settings\") will override this endpoint\'s default behavior of setting \"Tasks added\" notifications to `false`. Returns the updated project record.
         * @summary Add users to a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsAddMembersToProjectRequest} projectsAddMembersToProjectRequest Information about the members being added.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addMembersToProject: async (projectGid: string, projectsAddMembersToProjectRequest: ProjectsAddMembersToProjectRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('addMembersToProject', 'projectGid', projectGid)
            // verify required parameter 'projectsAddMembersToProjectRequest' is not null or undefined
            assertParamExists('addMembersToProject', 'projectsAddMembersToProjectRequest', projectsAddMembersToProjectRequest)
            const localVarPath = `/projects/{project_gid}/addMembers`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsAddMembersToProjectRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/addMembers',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsAddMembersToProjectRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a project in the workspace.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project in a workspace
         * @param {string} workspaceGid Globally unique identifier for the workspace or organization.
         * @param {ProjectsCreateInWorkspaceRequest} projectsCreateInWorkspaceRequest The new project to create.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createInWorkspace: async (workspaceGid: string, projectsCreateInWorkspaceRequest: ProjectsCreateInWorkspaceRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'workspaceGid' is not null or undefined
            assertParamExists('createInWorkspace', 'workspaceGid', workspaceGid)
            // verify required parameter 'projectsCreateInWorkspaceRequest' is not null or undefined
            assertParamExists('createInWorkspace', 'projectsCreateInWorkspaceRequest', projectsCreateInWorkspaceRequest)
            const localVarPath = `/workspaces/{workspace_gid}/projects`
                .replace(`{${"workspace_gid"}}`, encodeURIComponent(String(workspaceGid !== undefined ? workspaceGid : `-workspace_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsCreateInWorkspaceRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/workspaces/{workspace_gid}/projects',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsCreateInWorkspaceRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Create a new project in a workspace or team.  Every project is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the `workspace` parameter regardless of whether or not it is an organization.  If the workspace for your project is an organization, you must also supply a `team` to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project
         * @param {ProjectsCreateNewProjectRecordRequest} projectsCreateNewProjectRecordRequest The project to create.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createNewProjectRecord: async (projectsCreateNewProjectRecordRequest: ProjectsCreateNewProjectRecordRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectsCreateNewProjectRecordRequest' is not null or undefined
            assertParamExists('createNewProjectRecord', 'projectsCreateNewProjectRecordRequest', projectsCreateNewProjectRecordRequest)
            const localVarPath = `/projects`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsCreateNewProjectRecordRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsCreateNewProjectRecordRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates a project shared with the given team.  Returns the full record of the newly created project.
         * @summary Create a project in a team
         * @param {string} teamGid Globally unique identifier for the team.
         * @param {ProjectsCreateProjectForTeamRequest} projectsCreateProjectForTeamRequest The new project to create.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProjectForTeam: async (teamGid: string, projectsCreateProjectForTeamRequest: ProjectsCreateProjectForTeamRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'teamGid' is not null or undefined
            assertParamExists('createProjectForTeam', 'teamGid', teamGid)
            // verify required parameter 'projectsCreateProjectForTeamRequest' is not null or undefined
            assertParamExists('createProjectForTeam', 'projectsCreateProjectForTeamRequest', projectsCreateProjectForTeamRequest)
            const localVarPath = `/teams/{team_gid}/projects`
                .replace(`{${"team_gid"}}`, encodeURIComponent(String(teamGid !== undefined ? teamGid : `-team_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsCreateProjectForTeamRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/teams/{team_gid}/projects',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsCreateProjectForTeamRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates and returns a job that will asynchronously handle the project template creation. Note that while the resulting project template can be accessed with the API, it won\'t be visible in the Asana UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
         * @summary Create a project template from a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsCreateProjectTemplateJobRequest} projectsCreateProjectTemplateJobRequest Describes the inputs used for creating a project template, such as the resulting project template\&#39;s name, which team it should be created in.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProjectTemplateJob: async (projectGid: string, projectsCreateProjectTemplateJobRequest: ProjectsCreateProjectTemplateJobRequest, optPretty?: boolean, optFields?: Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('createProjectTemplateJob', 'projectGid', projectGid)
            // verify required parameter 'projectsCreateProjectTemplateJobRequest' is not null or undefined
            assertParamExists('createProjectTemplateJob', 'projectsCreateProjectTemplateJobRequest', projectsCreateProjectTemplateJobRequest)
            const localVarPath = `/projects/{project_gid}/saveAsTemplate`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsCreateProjectTemplateJobRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/saveAsTemplate',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsCreateProjectTemplateJobRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * A specific, existing project can be deleted by making a DELETE request on the URL for that project.  Returns an empty data record.
         * @summary Delete a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteProjectById: async (projectGid: string, optPretty?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('deleteProjectById', 'projectGid', projectGid)
            const localVarPath = `/projects/{project_gid}`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}',
                httpMethod: 'DELETE'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates and returns a job that will asynchronously handle the duplication.
         * @summary Duplicate a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {ProjectsDuplicateProjectJobRequest} [projectsDuplicateProjectJobRequest] Describes the duplicate\&#39;s name and the elements that will be duplicated.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        duplicateProjectJob: async (projectGid: string, optPretty?: boolean, optFields?: Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>, projectsDuplicateProjectJobRequest?: ProjectsDuplicateProjectJobRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('duplicateProjectJob', 'projectGid', projectGid)
            const localVarPath = `/projects/{project_gid}/duplicate`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsDuplicateProjectJobRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/duplicate',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsDuplicateProjectJobRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the compact project records for all projects in the workspace. *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
         * @summary Get all projects in a workspace
         * @param {string} workspaceGid Globally unique identifier for the workspace or organization.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {boolean} [archived] Only return projects whose &#x60;archived&#x60; field takes on the value of this parameter.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllInWorkspace: async (workspaceGid: string, optPretty?: boolean, limit?: number, offset?: string, archived?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'workspaceGid' is not null or undefined
            assertParamExists('getAllInWorkspace', 'workspaceGid', workspaceGid)
            const localVarPath = `/workspaces/{workspace_gid}/projects`
                .replace(`{${"workspace_gid"}}`, encodeURIComponent(String(workspaceGid !== undefined ? workspaceGid : `-workspace_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (archived !== undefined) {
                localVarQueryParameter['archived'] = archived;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/workspaces/{workspace_gid}/projects',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the complete project record for a single project.
         * @summary Get a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProjectRecord: async (projectGid: string, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('getProjectRecord', 'projectGid', projectGid)
            const localVarPath = `/projects/{project_gid}`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](https://raw.githubusercontent.com) using `opt_fields` to get any information from this endpoint.  This endpoint has an additional [rate limit](https://raw.githubusercontent.com) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).  Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
         * @summary Get task count of a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'num_completed_milestones' | 'num_completed_tasks' | 'num_incomplete_milestones' | 'num_incomplete_tasks' | 'num_milestones' | 'num_tasks'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTaskCounts: async (projectGid: string, optPretty?: boolean, optFields?: Array<'num_completed_milestones' | 'num_completed_tasks' | 'num_incomplete_milestones' | 'num_incomplete_tasks' | 'num_milestones' | 'num_tasks'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('getTaskCounts', 'projectGid', projectGid)
            const localVarPath = `/projects/{project_gid}/task_counts`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/task_counts',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the compact project records for all projects in the team.
         * @summary Get a team\'s projects
         * @param {string} teamGid Globally unique identifier for the team.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {boolean} [archived] Only return projects whose &#x60;archived&#x60; field takes on the value of this parameter.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTeamProjects: async (teamGid: string, optPretty?: boolean, limit?: number, offset?: string, archived?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'teamGid' is not null or undefined
            assertParamExists('getTeamProjects', 'teamGid', teamGid)
            const localVarPath = `/teams/{team_gid}/projects`
                .replace(`{${"team_gid"}}`, encodeURIComponent(String(teamGid !== undefined ? teamGid : `-team_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (archived !== undefined) {
                localVarQueryParameter['archived'] = archived;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/teams/{team_gid}/projects',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned. *Note: This endpoint may timeout for large domains. Try filtering by team!*
         * @summary Get multiple projects
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {string} [workspace] The workspace or organization to filter projects on.
         * @param {string} [team] The team to filter projects on.
         * @param {boolean} [archived] Only return projects whose &#x60;archived&#x60; field takes on the value of this parameter.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listMultiple: async (optPretty?: boolean, limit?: number, offset?: string, workspace?: string, team?: string, archived?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/projects`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (workspace !== undefined) {
                localVarQueryParameter['workspace'] = workspace;
            }

            if (team !== undefined) {
                localVarQueryParameter['team'] = team;
            }

            if (archived !== undefined) {
                localVarQueryParameter['archived'] = archived;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Removes a custom field setting from a project.
         * @summary Remove a custom field from a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsRemoveCustomFieldRequest} projectsRemoveCustomFieldRequest Information about the custom field setting being removed.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeCustomField: async (projectGid: string, projectsRemoveCustomFieldRequest: ProjectsRemoveCustomFieldRequest, optPretty?: boolean, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('removeCustomField', 'projectGid', projectGid)
            // verify required parameter 'projectsRemoveCustomFieldRequest' is not null or undefined
            assertParamExists('removeCustomField', 'projectsRemoveCustomFieldRequest', projectsRemoveCustomFieldRequest)
            const localVarPath = `/projects/{project_gid}/removeCustomFieldSetting`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsRemoveCustomFieldRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/removeCustomFieldSetting',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsRemoveCustomFieldRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Removes the specified list of users from members of the project. Returns the updated project record.
         * @summary Remove users from a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsRemoveMembersFromProjectRequest} projectsRemoveMembersFromProjectRequest Information about the members being removed.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeMembersFromProject: async (projectGid: string, projectsRemoveMembersFromProjectRequest: ProjectsRemoveMembersFromProjectRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('removeMembersFromProject', 'projectGid', projectGid)
            // verify required parameter 'projectsRemoveMembersFromProjectRequest' is not null or undefined
            assertParamExists('removeMembersFromProject', 'projectsRemoveMembersFromProjectRequest', projectsRemoveMembersFromProjectRequest)
            const localVarPath = `/projects/{project_gid}/removeMembers`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsRemoveMembersFromProjectRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/removeMembers',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsRemoveMembersFromProjectRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Removes the specified list of users from following the project, this will not affect project membership status. Returns the updated project record.
         * @summary Remove followers from a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsRemoveProjectFollowersRequest} projectsRemoveProjectFollowersRequest Information about the followers being removed.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeProjectFollowers: async (projectGid: string, projectsRemoveProjectFollowersRequest: ProjectsRemoveProjectFollowersRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('removeProjectFollowers', 'projectGid', projectGid)
            // verify required parameter 'projectsRemoveProjectFollowersRequest' is not null or undefined
            assertParamExists('removeProjectFollowers', 'projectsRemoveProjectFollowersRequest', projectsRemoveProjectFollowersRequest)
            const localVarPath = `/projects/{project_gid}/removeFollowers`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsRemoveProjectFollowersRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/removeFollowers',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsRemoveProjectFollowersRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a compact representation of all of the projects the task is in.
         * @summary Get projects a task is in
         * @param {string} taskGid The task to operate on.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        taskProjectsList: async (taskGid: string, optPretty?: boolean, limit?: number, offset?: string, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'taskGid' is not null or undefined
            assertParamExists('taskProjectsList', 'taskGid', taskGid)
            const localVarPath = `/tasks/{task_gid}/projects`
                .replace(`{${"task_gid"}}`, encodeURIComponent(String(taskGid !== undefined ? taskGid : `-task_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/tasks/{task_gid}/projects',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * A specific, existing project can be updated by making a PUT request on the URL for that project. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated project record.
         * @summary Update a project
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {ProjectsUpdateProjectRecordRequest} projectsUpdateProjectRecordRequest The updated fields for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateProjectRecord: async (projectGid: string, projectsUpdateProjectRecordRequest: ProjectsUpdateProjectRecordRequest, optPretty?: boolean, optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('updateProjectRecord', 'projectGid', projectGid)
            // verify required parameter 'projectsUpdateProjectRecordRequest' is not null or undefined
            assertParamExists('updateProjectRecord', 'projectsUpdateProjectRecordRequest', projectsUpdateProjectRecordRequest)
            const localVarPath = `/projects/{project_gid}`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: projectsUpdateProjectRecordRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}',
                httpMethod: 'PUT'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(projectsUpdateProjectRecordRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProjectsApi - functional programming interface
 * @export
 */
export const ProjectsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProjectsApiAxiosParamCreator(configuration)
    return {
        /**
         * Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.
         * @summary Add a custom field to a project
         * @param {ProjectsApiAddCustomFieldSettingRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async addCustomFieldSetting(requestParameters: ProjectsApiAddCustomFieldSettingRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsAddCustomFieldSettingResponse>> {
            const projectsAddCustomFieldSettingRequest: ProjectsAddCustomFieldSettingRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.addCustomFieldSetting(requestParameters.projectGid, projectsAddCustomFieldSettingRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation. Returns the updated project record.
         * @summary Add followers to a project
         * @param {ProjectsApiAddFollowersToProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async addFollowersToProject(requestParameters: ProjectsApiAddFollowersToProjectRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsAddFollowersToProjectResponse>> {
            const projectsAddFollowersToProjectRequest: ProjectsAddFollowersToProjectRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.addFollowersToProject(requestParameters.projectGid, projectsAddFollowersToProjectRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user\'s default notification settings (i.e., in the \"Notifcations\" tab of \"My Profile Settings\") will override this endpoint\'s default behavior of setting \"Tasks added\" notifications to `false`. Returns the updated project record.
         * @summary Add users to a project
         * @param {ProjectsApiAddMembersToProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async addMembersToProject(requestParameters: ProjectsApiAddMembersToProjectRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsAddMembersToProjectResponse>> {
            const projectsAddMembersToProjectRequest: ProjectsAddMembersToProjectRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.addMembersToProject(requestParameters.projectGid, projectsAddMembersToProjectRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates a project in the workspace.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project in a workspace
         * @param {ProjectsApiCreateInWorkspaceRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createInWorkspace(requestParameters: ProjectsApiCreateInWorkspaceRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsCreateInWorkspaceResponse>> {
            const projectsCreateInWorkspaceRequest: ProjectsCreateInWorkspaceRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.createInWorkspace(requestParameters.workspaceGid, projectsCreateInWorkspaceRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Create a new project in a workspace or team.  Every project is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the `workspace` parameter regardless of whether or not it is an organization.  If the workspace for your project is an organization, you must also supply a `team` to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project
         * @param {ProjectsApiCreateNewProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createNewProjectRecord(requestParameters: ProjectsApiCreateNewProjectRecordRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsCreateNewProjectRecordResponse>> {
            const projectsCreateNewProjectRecordRequest: ProjectsCreateNewProjectRecordRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.createNewProjectRecord(projectsCreateNewProjectRecordRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates a project shared with the given team.  Returns the full record of the newly created project.
         * @summary Create a project in a team
         * @param {ProjectsApiCreateProjectForTeamRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createProjectForTeam(requestParameters: ProjectsApiCreateProjectForTeamRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsCreateProjectForTeamResponse>> {
            const projectsCreateProjectForTeamRequest: ProjectsCreateProjectForTeamRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.createProjectForTeam(requestParameters.teamGid, projectsCreateProjectForTeamRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates and returns a job that will asynchronously handle the project template creation. Note that while the resulting project template can be accessed with the API, it won\'t be visible in the Asana UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
         * @summary Create a project template from a project
         * @param {ProjectsApiCreateProjectTemplateJobRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createProjectTemplateJob(requestParameters: ProjectsApiCreateProjectTemplateJobRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsCreateProjectTemplateJobResponse>> {
            const projectsCreateProjectTemplateJobRequest: ProjectsCreateProjectTemplateJobRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.createProjectTemplateJob(requestParameters.projectGid, projectsCreateProjectTemplateJobRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * A specific, existing project can be deleted by making a DELETE request on the URL for that project.  Returns an empty data record.
         * @summary Delete a project
         * @param {ProjectsApiDeleteProjectByIdRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteProjectById(requestParameters: ProjectsApiDeleteProjectByIdRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsDeleteProjectByIdResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteProjectById(requestParameters.projectGid, requestParameters.optPretty, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates and returns a job that will asynchronously handle the duplication.
         * @summary Duplicate a project
         * @param {ProjectsApiDuplicateProjectJobRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async duplicateProjectJob(requestParameters: ProjectsApiDuplicateProjectJobRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsDuplicateProjectJobResponse>> {
            const projectsDuplicateProjectJobRequest: ProjectsDuplicateProjectJobRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.duplicateProjectJob(requestParameters.projectGid, requestParameters.optPretty, requestParameters.optFields, projectsDuplicateProjectJobRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the compact project records for all projects in the workspace. *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
         * @summary Get all projects in a workspace
         * @param {ProjectsApiGetAllInWorkspaceRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAllInWorkspace(requestParameters: ProjectsApiGetAllInWorkspaceRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsGetAllInWorkspaceResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getAllInWorkspace(requestParameters.workspaceGid, requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.archived, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the complete project record for a single project.
         * @summary Get a project
         * @param {ProjectsApiGetProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProjectRecord(requestParameters: ProjectsApiGetProjectRecordRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsGetProjectRecordResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProjectRecord(requestParameters.projectGid, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](https://raw.githubusercontent.com) using `opt_fields` to get any information from this endpoint.  This endpoint has an additional [rate limit](https://raw.githubusercontent.com) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).  Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
         * @summary Get task count of a project
         * @param {ProjectsApiGetTaskCountsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTaskCounts(requestParameters: ProjectsApiGetTaskCountsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsGetTaskCountsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTaskCounts(requestParameters.projectGid, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the compact project records for all projects in the team.
         * @summary Get a team\'s projects
         * @param {ProjectsApiGetTeamProjectsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTeamProjects(requestParameters: ProjectsApiGetTeamProjectsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsGetTeamProjectsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTeamProjects(requestParameters.teamGid, requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.archived, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned. *Note: This endpoint may timeout for large domains. Try filtering by team!*
         * @summary Get multiple projects
         * @param {ProjectsApiListMultipleRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listMultiple(requestParameters: ProjectsApiListMultipleRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsListMultipleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listMultiple(requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.workspace, requestParameters.team, requestParameters.archived, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Removes a custom field setting from a project.
         * @summary Remove a custom field from a project
         * @param {ProjectsApiRemoveCustomFieldRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async removeCustomField(requestParameters: ProjectsApiRemoveCustomFieldRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsRemoveCustomFieldResponse>> {
            const projectsRemoveCustomFieldRequest: ProjectsRemoveCustomFieldRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.removeCustomField(requestParameters.projectGid, projectsRemoveCustomFieldRequest, requestParameters.optPretty, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Removes the specified list of users from members of the project. Returns the updated project record.
         * @summary Remove users from a project
         * @param {ProjectsApiRemoveMembersFromProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async removeMembersFromProject(requestParameters: ProjectsApiRemoveMembersFromProjectRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsRemoveMembersFromProjectResponse>> {
            const projectsRemoveMembersFromProjectRequest: ProjectsRemoveMembersFromProjectRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.removeMembersFromProject(requestParameters.projectGid, projectsRemoveMembersFromProjectRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Removes the specified list of users from following the project, this will not affect project membership status. Returns the updated project record.
         * @summary Remove followers from a project
         * @param {ProjectsApiRemoveProjectFollowersRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async removeProjectFollowers(requestParameters: ProjectsApiRemoveProjectFollowersRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsRemoveProjectFollowersResponse>> {
            const projectsRemoveProjectFollowersRequest: ProjectsRemoveProjectFollowersRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.removeProjectFollowers(requestParameters.projectGid, projectsRemoveProjectFollowersRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns a compact representation of all of the projects the task is in.
         * @summary Get projects a task is in
         * @param {ProjectsApiTaskProjectsListRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async taskProjectsList(requestParameters: ProjectsApiTaskProjectsListRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsTaskProjectsListResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.taskProjectsList(requestParameters.taskGid, requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * A specific, existing project can be updated by making a PUT request on the URL for that project. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated project record.
         * @summary Update a project
         * @param {ProjectsApiUpdateProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateProjectRecord(requestParameters: ProjectsApiUpdateProjectRecordRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProjectsUpdateProjectRecordResponse>> {
            const projectsUpdateProjectRecordRequest: ProjectsUpdateProjectRecordRequest = {
                data: requestParameters.data
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateProjectRecord(requestParameters.projectGid, projectsUpdateProjectRecordRequest, requestParameters.optPretty, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProjectsApi - factory interface
 * @export
 */
export const ProjectsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProjectsApiFp(configuration)
    return {
        /**
         * Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.
         * @summary Add a custom field to a project
         * @param {ProjectsApiAddCustomFieldSettingRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addCustomFieldSetting(requestParameters: ProjectsApiAddCustomFieldSettingRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsAddCustomFieldSettingResponse> {
            return localVarFp.addCustomFieldSetting(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation. Returns the updated project record.
         * @summary Add followers to a project
         * @param {ProjectsApiAddFollowersToProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addFollowersToProject(requestParameters: ProjectsApiAddFollowersToProjectRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsAddFollowersToProjectResponse> {
            return localVarFp.addFollowersToProject(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user\'s default notification settings (i.e., in the \"Notifcations\" tab of \"My Profile Settings\") will override this endpoint\'s default behavior of setting \"Tasks added\" notifications to `false`. Returns the updated project record.
         * @summary Add users to a project
         * @param {ProjectsApiAddMembersToProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        addMembersToProject(requestParameters: ProjectsApiAddMembersToProjectRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsAddMembersToProjectResponse> {
            return localVarFp.addMembersToProject(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates a project in the workspace.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project in a workspace
         * @param {ProjectsApiCreateInWorkspaceRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createInWorkspace(requestParameters: ProjectsApiCreateInWorkspaceRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsCreateInWorkspaceResponse> {
            return localVarFp.createInWorkspace(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Create a new project in a workspace or team.  Every project is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the `workspace` parameter regardless of whether or not it is an organization.  If the workspace for your project is an organization, you must also supply a `team` to share the project with.  Returns the full record of the newly created project.
         * @summary Create a project
         * @param {ProjectsApiCreateNewProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createNewProjectRecord(requestParameters: ProjectsApiCreateNewProjectRecordRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsCreateNewProjectRecordResponse> {
            return localVarFp.createNewProjectRecord(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates a project shared with the given team.  Returns the full record of the newly created project.
         * @summary Create a project in a team
         * @param {ProjectsApiCreateProjectForTeamRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProjectForTeam(requestParameters: ProjectsApiCreateProjectForTeamRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsCreateProjectForTeamResponse> {
            return localVarFp.createProjectForTeam(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates and returns a job that will asynchronously handle the project template creation. Note that while the resulting project template can be accessed with the API, it won\'t be visible in the Asana UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
         * @summary Create a project template from a project
         * @param {ProjectsApiCreateProjectTemplateJobRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProjectTemplateJob(requestParameters: ProjectsApiCreateProjectTemplateJobRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsCreateProjectTemplateJobResponse> {
            return localVarFp.createProjectTemplateJob(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * A specific, existing project can be deleted by making a DELETE request on the URL for that project.  Returns an empty data record.
         * @summary Delete a project
         * @param {ProjectsApiDeleteProjectByIdRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteProjectById(requestParameters: ProjectsApiDeleteProjectByIdRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsDeleteProjectByIdResponse> {
            return localVarFp.deleteProjectById(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates and returns a job that will asynchronously handle the duplication.
         * @summary Duplicate a project
         * @param {ProjectsApiDuplicateProjectJobRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        duplicateProjectJob(requestParameters: ProjectsApiDuplicateProjectJobRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsDuplicateProjectJobResponse> {
            return localVarFp.duplicateProjectJob(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the compact project records for all projects in the workspace. *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
         * @summary Get all projects in a workspace
         * @param {ProjectsApiGetAllInWorkspaceRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAllInWorkspace(requestParameters: ProjectsApiGetAllInWorkspaceRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsGetAllInWorkspaceResponse> {
            return localVarFp.getAllInWorkspace(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the complete project record for a single project.
         * @summary Get a project
         * @param {ProjectsApiGetProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProjectRecord(requestParameters: ProjectsApiGetProjectRecordRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsGetProjectRecordResponse> {
            return localVarFp.getProjectRecord(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](https://raw.githubusercontent.com) using `opt_fields` to get any information from this endpoint.  This endpoint has an additional [rate limit](https://raw.githubusercontent.com) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).  Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
         * @summary Get task count of a project
         * @param {ProjectsApiGetTaskCountsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTaskCounts(requestParameters: ProjectsApiGetTaskCountsRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsGetTaskCountsResponse> {
            return localVarFp.getTaskCounts(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the compact project records for all projects in the team.
         * @summary Get a team\'s projects
         * @param {ProjectsApiGetTeamProjectsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTeamProjects(requestParameters: ProjectsApiGetTeamProjectsRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsGetTeamProjectsResponse> {
            return localVarFp.getTeamProjects(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned. *Note: This endpoint may timeout for large domains. Try filtering by team!*
         * @summary Get multiple projects
         * @param {ProjectsApiListMultipleRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listMultiple(requestParameters: ProjectsApiListMultipleRequest = {}, options?: AxiosRequestConfig): AxiosPromise<ProjectsListMultipleResponse> {
            return localVarFp.listMultiple(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Removes a custom field setting from a project.
         * @summary Remove a custom field from a project
         * @param {ProjectsApiRemoveCustomFieldRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeCustomField(requestParameters: ProjectsApiRemoveCustomFieldRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsRemoveCustomFieldResponse> {
            return localVarFp.removeCustomField(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Removes the specified list of users from members of the project. Returns the updated project record.
         * @summary Remove users from a project
         * @param {ProjectsApiRemoveMembersFromProjectRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeMembersFromProject(requestParameters: ProjectsApiRemoveMembersFromProjectRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsRemoveMembersFromProjectResponse> {
            return localVarFp.removeMembersFromProject(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Removes the specified list of users from following the project, this will not affect project membership status. Returns the updated project record.
         * @summary Remove followers from a project
         * @param {ProjectsApiRemoveProjectFollowersRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        removeProjectFollowers(requestParameters: ProjectsApiRemoveProjectFollowersRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsRemoveProjectFollowersResponse> {
            return localVarFp.removeProjectFollowers(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a compact representation of all of the projects the task is in.
         * @summary Get projects a task is in
         * @param {ProjectsApiTaskProjectsListRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        taskProjectsList(requestParameters: ProjectsApiTaskProjectsListRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsTaskProjectsListResponse> {
            return localVarFp.taskProjectsList(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * A specific, existing project can be updated by making a PUT request on the URL for that project. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated project record.
         * @summary Update a project
         * @param {ProjectsApiUpdateProjectRecordRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateProjectRecord(requestParameters: ProjectsApiUpdateProjectRecordRequest, options?: AxiosRequestConfig): AxiosPromise<ProjectsUpdateProjectRecordResponse> {
            return localVarFp.updateProjectRecord(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for addCustomFieldSetting operation in ProjectsApi.
 * @export
 * @interface ProjectsApiAddCustomFieldSettingRequest
 */
export type ProjectsApiAddCustomFieldSettingRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiAddCustomFieldSetting
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiAddCustomFieldSetting
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'parent' | 'parent.name' | 'project' | 'project.name'>}
    * @memberof ProjectsApiAddCustomFieldSetting
    */
    readonly optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'parent' | 'parent.name' | 'project' | 'project.name'>
    
} & ProjectsAddCustomFieldSettingRequest

/**
 * Request parameters for addFollowersToProject operation in ProjectsApi.
 * @export
 * @interface ProjectsApiAddFollowersToProjectRequest
 */
export type ProjectsApiAddFollowersToProjectRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiAddFollowersToProject
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiAddFollowersToProject
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiAddFollowersToProject
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsAddFollowersToProjectRequest

/**
 * Request parameters for addMembersToProject operation in ProjectsApi.
 * @export
 * @interface ProjectsApiAddMembersToProjectRequest
 */
export type ProjectsApiAddMembersToProjectRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiAddMembersToProject
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiAddMembersToProject
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiAddMembersToProject
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsAddMembersToProjectRequest

/**
 * Request parameters for createInWorkspace operation in ProjectsApi.
 * @export
 * @interface ProjectsApiCreateInWorkspaceRequest
 */
export type ProjectsApiCreateInWorkspaceRequest = {
    
    /**
    * Globally unique identifier for the workspace or organization.
    * @type {string}
    * @memberof ProjectsApiCreateInWorkspace
    */
    readonly workspaceGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiCreateInWorkspace
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiCreateInWorkspace
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsCreateInWorkspaceRequest

/**
 * Request parameters for createNewProjectRecord operation in ProjectsApi.
 * @export
 * @interface ProjectsApiCreateNewProjectRecordRequest
 */
export type ProjectsApiCreateNewProjectRecordRequest = {
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiCreateNewProjectRecord
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiCreateNewProjectRecord
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsCreateNewProjectRecordRequest

/**
 * Request parameters for createProjectForTeam operation in ProjectsApi.
 * @export
 * @interface ProjectsApiCreateProjectForTeamRequest
 */
export type ProjectsApiCreateProjectForTeamRequest = {
    
    /**
    * Globally unique identifier for the team.
    * @type {string}
    * @memberof ProjectsApiCreateProjectForTeam
    */
    readonly teamGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiCreateProjectForTeam
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiCreateProjectForTeam
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsCreateProjectForTeamRequest

/**
 * Request parameters for createProjectTemplateJob operation in ProjectsApi.
 * @export
 * @interface ProjectsApiCreateProjectTemplateJobRequest
 */
export type ProjectsApiCreateProjectTemplateJobRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiCreateProjectTemplateJob
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiCreateProjectTemplateJob
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>}
    * @memberof ProjectsApiCreateProjectTemplateJob
    */
    readonly optFields?: Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>
    
} & ProjectsCreateProjectTemplateJobRequest

/**
 * Request parameters for deleteProjectById operation in ProjectsApi.
 * @export
 * @interface ProjectsApiDeleteProjectByIdRequest
 */
export type ProjectsApiDeleteProjectByIdRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiDeleteProjectById
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiDeleteProjectById
    */
    readonly optPretty?: boolean
    
}

/**
 * Request parameters for duplicateProjectJob operation in ProjectsApi.
 * @export
 * @interface ProjectsApiDuplicateProjectJobRequest
 */
export type ProjectsApiDuplicateProjectJobRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiDuplicateProjectJob
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiDuplicateProjectJob
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>}
    * @memberof ProjectsApiDuplicateProjectJob
    */
    readonly optFields?: Array<'new_project' | 'new_project.name' | 'new_project_template' | 'new_project_template.name' | 'new_task' | 'new_task.created_by' | 'new_task.name' | 'new_task.resource_subtype' | 'new_task_template' | 'new_task_template.name' | 'resource_subtype' | 'status'>
    
} & ProjectsDuplicateProjectJobRequest

/**
 * Request parameters for getAllInWorkspace operation in ProjectsApi.
 * @export
 * @interface ProjectsApiGetAllInWorkspaceRequest
 */
export type ProjectsApiGetAllInWorkspaceRequest = {
    
    /**
    * Globally unique identifier for the workspace or organization.
    * @type {string}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly workspaceGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly offset?: string
    
    /**
    * Only return projects whose `archived` field takes on the value of this parameter.
    * @type {boolean}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly archived?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiGetAllInWorkspace
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>
    
}

/**
 * Request parameters for getProjectRecord operation in ProjectsApi.
 * @export
 * @interface ProjectsApiGetProjectRecordRequest
 */
export type ProjectsApiGetProjectRecordRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiGetProjectRecord
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiGetProjectRecord
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiGetProjectRecord
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
}

/**
 * Request parameters for getTaskCounts operation in ProjectsApi.
 * @export
 * @interface ProjectsApiGetTaskCountsRequest
 */
export type ProjectsApiGetTaskCountsRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiGetTaskCounts
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiGetTaskCounts
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'num_completed_milestones' | 'num_completed_tasks' | 'num_incomplete_milestones' | 'num_incomplete_tasks' | 'num_milestones' | 'num_tasks'>}
    * @memberof ProjectsApiGetTaskCounts
    */
    readonly optFields?: Array<'num_completed_milestones' | 'num_completed_tasks' | 'num_incomplete_milestones' | 'num_incomplete_tasks' | 'num_milestones' | 'num_tasks'>
    
}

/**
 * Request parameters for getTeamProjects operation in ProjectsApi.
 * @export
 * @interface ProjectsApiGetTeamProjectsRequest
 */
export type ProjectsApiGetTeamProjectsRequest = {
    
    /**
    * Globally unique identifier for the team.
    * @type {string}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly teamGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly offset?: string
    
    /**
    * Only return projects whose `archived` field takes on the value of this parameter.
    * @type {boolean}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly archived?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiGetTeamProjects
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>
    
}

/**
 * Request parameters for listMultiple operation in ProjectsApi.
 * @export
 * @interface ProjectsApiListMultipleRequest
 */
export type ProjectsApiListMultipleRequest = {
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiListMultiple
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof ProjectsApiListMultiple
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof ProjectsApiListMultiple
    */
    readonly offset?: string
    
    /**
    * The workspace or organization to filter projects on.
    * @type {string}
    * @memberof ProjectsApiListMultiple
    */
    readonly workspace?: string
    
    /**
    * The team to filter projects on.
    * @type {string}
    * @memberof ProjectsApiListMultiple
    */
    readonly team?: string
    
    /**
    * Only return projects whose `archived` field takes on the value of this parameter.
    * @type {boolean}
    * @memberof ProjectsApiListMultiple
    */
    readonly archived?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiListMultiple
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>
    
}

/**
 * Request parameters for removeCustomField operation in ProjectsApi.
 * @export
 * @interface ProjectsApiRemoveCustomFieldRequest
 */
export type ProjectsApiRemoveCustomFieldRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiRemoveCustomField
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiRemoveCustomField
    */
    readonly optPretty?: boolean
    
} & ProjectsRemoveCustomFieldRequest

/**
 * Request parameters for removeMembersFromProject operation in ProjectsApi.
 * @export
 * @interface ProjectsApiRemoveMembersFromProjectRequest
 */
export type ProjectsApiRemoveMembersFromProjectRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiRemoveMembersFromProject
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiRemoveMembersFromProject
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiRemoveMembersFromProject
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsRemoveMembersFromProjectRequest

/**
 * Request parameters for removeProjectFollowers operation in ProjectsApi.
 * @export
 * @interface ProjectsApiRemoveProjectFollowersRequest
 */
export type ProjectsApiRemoveProjectFollowersRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiRemoveProjectFollowers
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiRemoveProjectFollowers
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiRemoveProjectFollowers
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsRemoveProjectFollowersRequest

/**
 * Request parameters for taskProjectsList operation in ProjectsApi.
 * @export
 * @interface ProjectsApiTaskProjectsListRequest
 */
export type ProjectsApiTaskProjectsListRequest = {
    
    /**
    * The task to operate on.
    * @type {string}
    * @memberof ProjectsApiTaskProjectsList
    */
    readonly taskGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiTaskProjectsList
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof ProjectsApiTaskProjectsList
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof ProjectsApiTaskProjectsList
    */
    readonly offset?: string
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiTaskProjectsList
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'offset' | 'owner' | 'path' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'uri' | 'workspace' | 'workspace.name'>
    
}

/**
 * Request parameters for updateProjectRecord operation in ProjectsApi.
 * @export
 * @interface ProjectsApiUpdateProjectRecordRequest
 */
export type ProjectsApiUpdateProjectRecordRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof ProjectsApiUpdateProjectRecord
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof ProjectsApiUpdateProjectRecord
    */
    readonly optPretty?: boolean
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>}
    * @memberof ProjectsApiUpdateProjectRecord
    */
    readonly optFields?: Array<'archived' | 'color' | 'completed' | 'completed_at' | 'completed_by' | 'completed_by.name' | 'created_at' | 'created_from_template' | 'created_from_template.name' | 'current_status' | 'current_status.author' | 'current_status.author.name' | 'current_status.color' | 'current_status.created_at' | 'current_status.created_by' | 'current_status.created_by.name' | 'current_status.html_text' | 'current_status.modified_at' | 'current_status.text' | 'current_status.title' | 'current_status_update' | 'current_status_update.resource_subtype' | 'current_status_update.title' | 'custom_field_settings' | 'custom_field_settings.custom_field' | 'custom_field_settings.custom_field.asana_created_field' | 'custom_field_settings.custom_field.created_by' | 'custom_field_settings.custom_field.created_by.name' | 'custom_field_settings.custom_field.currency_code' | 'custom_field_settings.custom_field.custom_label' | 'custom_field_settings.custom_field.custom_label_position' | 'custom_field_settings.custom_field.date_value' | 'custom_field_settings.custom_field.date_value.date' | 'custom_field_settings.custom_field.date_value.date_time' | 'custom_field_settings.custom_field.description' | 'custom_field_settings.custom_field.display_value' | 'custom_field_settings.custom_field.enabled' | 'custom_field_settings.custom_field.enum_options' | 'custom_field_settings.custom_field.enum_options.color' | 'custom_field_settings.custom_field.enum_options.enabled' | 'custom_field_settings.custom_field.enum_options.name' | 'custom_field_settings.custom_field.enum_value' | 'custom_field_settings.custom_field.enum_value.color' | 'custom_field_settings.custom_field.enum_value.enabled' | 'custom_field_settings.custom_field.enum_value.name' | 'custom_field_settings.custom_field.format' | 'custom_field_settings.custom_field.has_notifications_enabled' | 'custom_field_settings.custom_field.id_prefix' | 'custom_field_settings.custom_field.is_formula_field' | 'custom_field_settings.custom_field.is_global_to_workspace' | 'custom_field_settings.custom_field.is_value_read_only' | 'custom_field_settings.custom_field.multi_enum_values' | 'custom_field_settings.custom_field.multi_enum_values.color' | 'custom_field_settings.custom_field.multi_enum_values.enabled' | 'custom_field_settings.custom_field.multi_enum_values.name' | 'custom_field_settings.custom_field.name' | 'custom_field_settings.custom_field.number_value' | 'custom_field_settings.custom_field.people_value' | 'custom_field_settings.custom_field.people_value.name' | 'custom_field_settings.custom_field.precision' | 'custom_field_settings.custom_field.representation_type' | 'custom_field_settings.custom_field.resource_subtype' | 'custom_field_settings.custom_field.text_value' | 'custom_field_settings.custom_field.type' | 'custom_field_settings.is_important' | 'custom_field_settings.parent' | 'custom_field_settings.parent.name' | 'custom_field_settings.project' | 'custom_field_settings.project.name' | 'custom_fields' | 'custom_fields.date_value' | 'custom_fields.date_value.date' | 'custom_fields.date_value.date_time' | 'custom_fields.display_value' | 'custom_fields.enabled' | 'custom_fields.enum_options' | 'custom_fields.enum_options.color' | 'custom_fields.enum_options.enabled' | 'custom_fields.enum_options.name' | 'custom_fields.enum_value' | 'custom_fields.enum_value.color' | 'custom_fields.enum_value.enabled' | 'custom_fields.enum_value.name' | 'custom_fields.id_prefix' | 'custom_fields.is_formula_field' | 'custom_fields.multi_enum_values' | 'custom_fields.multi_enum_values.color' | 'custom_fields.multi_enum_values.enabled' | 'custom_fields.multi_enum_values.name' | 'custom_fields.name' | 'custom_fields.number_value' | 'custom_fields.representation_type' | 'custom_fields.resource_subtype' | 'custom_fields.text_value' | 'custom_fields.type' | 'default_access_level' | 'default_view' | 'due_date' | 'due_on' | 'followers' | 'followers.name' | 'html_notes' | 'icon' | 'members' | 'members.name' | 'minimum_access_level_for_customization' | 'minimum_access_level_for_sharing' | 'modified_at' | 'name' | 'notes' | 'owner' | 'permalink_url' | 'privacy_setting' | 'project_brief' | 'public' | 'start_on' | 'team' | 'team.name' | 'workspace' | 'workspace.name'>
    
} & ProjectsUpdateProjectRecordRequest

/**
 * ProjectsApiGenerated - object-oriented interface
 * @export
 * @class ProjectsApiGenerated
 * @extends {BaseAPI}
 */
export class ProjectsApiGenerated extends BaseAPI {
    /**
     * Custom fields are associated with projects by way of custom field settings.  This method creates a setting for the project.
     * @summary Add a custom field to a project
     * @param {ProjectsApiAddCustomFieldSettingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public addCustomFieldSetting(requestParameters: ProjectsApiAddCustomFieldSettingRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).addCustomFieldSetting(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Adds the specified list of users as followers to the project. Followers are a subset of members who have opted in to receive \"tasks added\" notifications for a project. Therefore, if the users are not already members of the project, they will also become members as a result of this operation. Returns the updated project record.
     * @summary Add followers to a project
     * @param {ProjectsApiAddFollowersToProjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public addFollowersToProject(requestParameters: ProjectsApiAddFollowersToProjectRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).addFollowersToProject(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Adds the specified list of users as members of the project. Note that a user being added as a member may also be added as a *follower* as a result of this operation. This is because the user\'s default notification settings (i.e., in the \"Notifcations\" tab of \"My Profile Settings\") will override this endpoint\'s default behavior of setting \"Tasks added\" notifications to `false`. Returns the updated project record.
     * @summary Add users to a project
     * @param {ProjectsApiAddMembersToProjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public addMembersToProject(requestParameters: ProjectsApiAddMembersToProjectRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).addMembersToProject(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates a project in the workspace.  If the workspace for your project is an organization, you must also supply a team to share the project with.  Returns the full record of the newly created project.
     * @summary Create a project in a workspace
     * @param {ProjectsApiCreateInWorkspaceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public createInWorkspace(requestParameters: ProjectsApiCreateInWorkspaceRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).createInWorkspace(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Create a new project in a workspace or team.  Every project is required to be created in a specific workspace or organization, and this cannot be changed once set. Note that you can use the `workspace` parameter regardless of whether or not it is an organization.  If the workspace for your project is an organization, you must also supply a `team` to share the project with.  Returns the full record of the newly created project.
     * @summary Create a project
     * @param {ProjectsApiCreateNewProjectRecordRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public createNewProjectRecord(requestParameters: ProjectsApiCreateNewProjectRecordRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).createNewProjectRecord(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates a project shared with the given team.  Returns the full record of the newly created project.
     * @summary Create a project in a team
     * @param {ProjectsApiCreateProjectForTeamRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public createProjectForTeam(requestParameters: ProjectsApiCreateProjectForTeamRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).createProjectForTeam(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates and returns a job that will asynchronously handle the project template creation. Note that while the resulting project template can be accessed with the API, it won\'t be visible in the Asana UI until Project Templates 2.0 is launched in the app. See more in [this forum post](https://forum.asana.com/t/a-new-api-for-project-templates/156432).
     * @summary Create a project template from a project
     * @param {ProjectsApiCreateProjectTemplateJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public createProjectTemplateJob(requestParameters: ProjectsApiCreateProjectTemplateJobRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).createProjectTemplateJob(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * A specific, existing project can be deleted by making a DELETE request on the URL for that project.  Returns an empty data record.
     * @summary Delete a project
     * @param {ProjectsApiDeleteProjectByIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public deleteProjectById(requestParameters: ProjectsApiDeleteProjectByIdRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).deleteProjectById(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates and returns a job that will asynchronously handle the duplication.
     * @summary Duplicate a project
     * @param {ProjectsApiDuplicateProjectJobRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public duplicateProjectJob(requestParameters: ProjectsApiDuplicateProjectJobRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).duplicateProjectJob(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the compact project records for all projects in the workspace. *Note: This endpoint may timeout for large domains. Prefer the `/teams/{team_gid}/projects` endpoint.*
     * @summary Get all projects in a workspace
     * @param {ProjectsApiGetAllInWorkspaceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public getAllInWorkspace(requestParameters: ProjectsApiGetAllInWorkspaceRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).getAllInWorkspace(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the complete project record for a single project.
     * @summary Get a project
     * @param {ProjectsApiGetProjectRecordRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public getProjectRecord(requestParameters: ProjectsApiGetProjectRecordRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).getProjectRecord(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get an object that holds task count fields. **All fields are excluded by default**. You must [opt in](https://raw.githubusercontent.com) using `opt_fields` to get any information from this endpoint.  This endpoint has an additional [rate limit](https://raw.githubusercontent.com) and each field counts especially high against our [cost limits](/docs/rate-limits#cost-limits).  Milestones are just tasks, so they are included in the `num_tasks`, `num_incomplete_tasks`, and `num_completed_tasks` counts.
     * @summary Get task count of a project
     * @param {ProjectsApiGetTaskCountsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public getTaskCounts(requestParameters: ProjectsApiGetTaskCountsRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).getTaskCounts(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the compact project records for all projects in the team.
     * @summary Get a team\'s projects
     * @param {ProjectsApiGetTeamProjectsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public getTeamProjects(requestParameters: ProjectsApiGetTeamProjectsRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).getTeamProjects(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the compact project records for some filtered set of projects. Use one or more of the parameters provided to filter the projects returned. *Note: This endpoint may timeout for large domains. Try filtering by team!*
     * @summary Get multiple projects
     * @param {ProjectsApiListMultipleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public listMultiple(requestParameters: ProjectsApiListMultipleRequest = {}, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).listMultiple(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Removes a custom field setting from a project.
     * @summary Remove a custom field from a project
     * @param {ProjectsApiRemoveCustomFieldRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public removeCustomField(requestParameters: ProjectsApiRemoveCustomFieldRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).removeCustomField(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Removes the specified list of users from members of the project. Returns the updated project record.
     * @summary Remove users from a project
     * @param {ProjectsApiRemoveMembersFromProjectRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public removeMembersFromProject(requestParameters: ProjectsApiRemoveMembersFromProjectRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).removeMembersFromProject(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Removes the specified list of users from following the project, this will not affect project membership status. Returns the updated project record.
     * @summary Remove followers from a project
     * @param {ProjectsApiRemoveProjectFollowersRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public removeProjectFollowers(requestParameters: ProjectsApiRemoveProjectFollowersRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).removeProjectFollowers(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a compact representation of all of the projects the task is in.
     * @summary Get projects a task is in
     * @param {ProjectsApiTaskProjectsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public taskProjectsList(requestParameters: ProjectsApiTaskProjectsListRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).taskProjectsList(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * A specific, existing project can be updated by making a PUT request on the URL for that project. Only the fields provided in the `data` block will be updated; any unspecified fields will remain unchanged.  When using this method, it is best to specify only those fields you wish to change, or else you may overwrite changes made by another user since you last retrieved the task.  Returns the complete updated project record.
     * @summary Update a project
     * @param {ProjectsApiUpdateProjectRecordRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectsApiGenerated
     */
    public updateProjectRecord(requestParameters: ProjectsApiUpdateProjectRecordRequest, options?: AxiosRequestConfig) {
        return ProjectsApiFp(this.configuration).updateProjectRecord(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
