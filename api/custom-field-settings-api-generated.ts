/* tslint:disable */
/* eslint-disable */
/*
Asana

This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { fromBuffer } from "file-type/browser"
const FormData = require("form-data")
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse } from '../models';
// @ts-ignore
import { CustomFieldSettingsGetProjectCustomFieldSettingsResponse } from '../models';
// @ts-ignore
import { ErrorResponse } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * CustomFieldSettingsApi - axios parameter creator
 * @export
 */
export const CustomFieldSettingsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns a list of all of the custom fields settings on a portfolio, in compact form.
         * @summary Get a portfolio\'s custom fields
         * @param {string} portfolioGid Globally unique identifier for the portfolio.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPortfolioCustomFieldSettings: async (portfolioGid: string, optPretty?: boolean, limit?: number, offset?: string, optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'portfolioGid' is not null or undefined
            assertParamExists('getPortfolioCustomFieldSettings', 'portfolioGid', portfolioGid)
            const localVarPath = `/portfolios/{portfolio_gid}/custom_field_settings`
                .replace(`{${"portfolio_gid"}}`, encodeURIComponent(String(portfolioGid !== undefined ? portfolioGid : `-portfolio_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/portfolios/{portfolio_gid}/custom_field_settings',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
         * @summary Get a project\'s custom fields
         * @param {string} projectGid Globally unique identifier for the project.
         * @param {boolean} [optPretty] Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
         * @param {number} [limit] Results per page. The number of objects to return per page. The value must be between 1 and 100.
         * @param {string} [offset] Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \&#39;Note: You can only pass in an offset that was returned to you via a previously paginated request.\&#39;
         * @param {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>} [optFields] This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProjectCustomFieldSettings: async (projectGid: string, optPretty?: boolean, limit?: number, offset?: string, optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'projectGid' is not null or undefined
            assertParamExists('getProjectCustomFieldSettings', 'projectGid', projectGid)
            const localVarPath = `/projects/{project_gid}/custom_field_settings`
                .replace(`{${"project_gid"}}`, encodeURIComponent(String(projectGid !== undefined ? projectGid : `-project_gid-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication oauth2 required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "oauth2", [], configuration)
            // authentication personalAccessToken required
            // http bearer authentication required
            await setBearerAuthToObject(localVarHeaderParameter, configuration)
            if (optPretty !== undefined) {
                localVarQueryParameter['opt_pretty'] = optPretty;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }

            if (optFields) {
                localVarQueryParameter['opt_fields'] = optFields.join(COLLECTION_FORMATS.csv);
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/projects/{project_gid}/custom_field_settings',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CustomFieldSettingsApi - functional programming interface
 * @export
 */
export const CustomFieldSettingsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CustomFieldSettingsApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns a list of all of the custom fields settings on a portfolio, in compact form.
         * @summary Get a portfolio\'s custom fields
         * @param {CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getPortfolioCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getPortfolioCustomFieldSettings(requestParameters.portfolioGid, requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
         * @summary Get a project\'s custom fields
         * @param {CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProjectCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CustomFieldSettingsGetProjectCustomFieldSettingsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProjectCustomFieldSettings(requestParameters.projectGid, requestParameters.optPretty, requestParameters.limit, requestParameters.offset, requestParameters.optFields, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CustomFieldSettingsApi - factory interface
 * @export
 */
export const CustomFieldSettingsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CustomFieldSettingsApiFp(configuration)
    return {
        /**
         * Returns a list of all of the custom fields settings on a portfolio, in compact form.
         * @summary Get a portfolio\'s custom fields
         * @param {CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getPortfolioCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest, options?: AxiosRequestConfig): AxiosPromise<CustomFieldSettingsGetPortfolioCustomFieldSettingsResponse> {
            return localVarFp.getPortfolioCustomFieldSettings(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
         * @summary Get a project\'s custom fields
         * @param {CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProjectCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest, options?: AxiosRequestConfig): AxiosPromise<CustomFieldSettingsGetProjectCustomFieldSettingsResponse> {
            return localVarFp.getProjectCustomFieldSettings(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getPortfolioCustomFieldSettings operation in CustomFieldSettingsApi.
 * @export
 * @interface CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest
 */
export type CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest = {
    
    /**
    * Globally unique identifier for the portfolio.
    * @type {string}
    * @memberof CustomFieldSettingsApiGetPortfolioCustomFieldSettings
    */
    readonly portfolioGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof CustomFieldSettingsApiGetPortfolioCustomFieldSettings
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof CustomFieldSettingsApiGetPortfolioCustomFieldSettings
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof CustomFieldSettingsApiGetPortfolioCustomFieldSettings
    */
    readonly offset?: string
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>}
    * @memberof CustomFieldSettingsApiGetPortfolioCustomFieldSettings
    */
    readonly optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>
    
}

/**
 * Request parameters for getProjectCustomFieldSettings operation in CustomFieldSettingsApi.
 * @export
 * @interface CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest
 */
export type CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest = {
    
    /**
    * Globally unique identifier for the project.
    * @type {string}
    * @memberof CustomFieldSettingsApiGetProjectCustomFieldSettings
    */
    readonly projectGid: string
    
    /**
    * Provides “pretty” output. Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
    * @type {boolean}
    * @memberof CustomFieldSettingsApiGetProjectCustomFieldSettings
    */
    readonly optPretty?: boolean
    
    /**
    * Results per page. The number of objects to return per page. The value must be between 1 and 100.
    * @type {number}
    * @memberof CustomFieldSettingsApiGetProjectCustomFieldSettings
    */
    readonly limit?: number
    
    /**
    * Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. \'Note: You can only pass in an offset that was returned to you via a previously paginated request.\'
    * @type {string}
    * @memberof CustomFieldSettingsApiGetProjectCustomFieldSettings
    */
    readonly offset?: string
    
    /**
    * This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    * @type {Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>}
    * @memberof CustomFieldSettingsApiGetProjectCustomFieldSettings
    */
    readonly optFields?: Array<'custom_field' | 'custom_field.asana_created_field' | 'custom_field.created_by' | 'custom_field.created_by.name' | 'custom_field.currency_code' | 'custom_field.custom_label' | 'custom_field.custom_label_position' | 'custom_field.date_value' | 'custom_field.date_value.date' | 'custom_field.date_value.date_time' | 'custom_field.description' | 'custom_field.display_value' | 'custom_field.enabled' | 'custom_field.enum_options' | 'custom_field.enum_options.color' | 'custom_field.enum_options.enabled' | 'custom_field.enum_options.name' | 'custom_field.enum_value' | 'custom_field.enum_value.color' | 'custom_field.enum_value.enabled' | 'custom_field.enum_value.name' | 'custom_field.format' | 'custom_field.has_notifications_enabled' | 'custom_field.id_prefix' | 'custom_field.is_formula_field' | 'custom_field.is_global_to_workspace' | 'custom_field.is_value_read_only' | 'custom_field.multi_enum_values' | 'custom_field.multi_enum_values.color' | 'custom_field.multi_enum_values.enabled' | 'custom_field.multi_enum_values.name' | 'custom_field.name' | 'custom_field.number_value' | 'custom_field.people_value' | 'custom_field.people_value.name' | 'custom_field.precision' | 'custom_field.representation_type' | 'custom_field.resource_subtype' | 'custom_field.text_value' | 'custom_field.type' | 'is_important' | 'offset' | 'parent' | 'parent.name' | 'path' | 'project' | 'project.name' | 'uri'>
    
}

/**
 * CustomFieldSettingsApiGenerated - object-oriented interface
 * @export
 * @class CustomFieldSettingsApiGenerated
 * @extends {BaseAPI}
 */
export class CustomFieldSettingsApiGenerated extends BaseAPI {
    /**
     * Returns a list of all of the custom fields settings on a portfolio, in compact form.
     * @summary Get a portfolio\'s custom fields
     * @param {CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomFieldSettingsApiGenerated
     */
    public getPortfolioCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetPortfolioCustomFieldSettingsRequest, options?: AxiosRequestConfig) {
        return CustomFieldSettingsApiFp(this.configuration).getPortfolioCustomFieldSettings(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` can be used to include more data than is returned in the compact representation. See the [documentation for input/output options](https://developers.asana.com/docs/inputoutput-options) for more information.
     * @summary Get a project\'s custom fields
     * @param {CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomFieldSettingsApiGenerated
     */
    public getProjectCustomFieldSettings(requestParameters: CustomFieldSettingsApiGetProjectCustomFieldSettingsRequest, options?: AxiosRequestConfig) {
        return CustomFieldSettingsApiFp(this.configuration).getProjectCustomFieldSettings(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
