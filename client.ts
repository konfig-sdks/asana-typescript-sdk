/*
Asana

This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AttachmentsApi,
  AuditLogApiApi,
  BatchApiApi,
  CustomFieldSettingsApi,
  CustomFieldsApi,
  EventsApi,
  GoalRelationshipsApi,
  GoalsApi,
  JobsApi,
  MembershipsApi,
  OrganizationExportsApi,
  PortfolioMembershipsApi,
  PortfoliosApi,
  ProjectBriefsApi,
  ProjectMembershipsApi,
  ProjectStatusesApi,
  ProjectTemplatesApi,
  ProjectsApi,
  RulesApi,
  SectionsApi,
  StatusUpdatesApi,
  StoriesApi,
  TagsApi,
  TaskTemplatesApi,
  TasksApi,
  TeamMembershipsApi,
  TeamsApi,
  TimePeriodsApi,
  TimeTrackingEntriesApi,
  TypeaheadApi,
  UserTaskListsApi,
  UsersApi,
  WebhooksApi,
  WorkspaceMembershipsApi,
  WorkspacesApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { AsanaCustom } from "./client-custom";

export class Asana extends AsanaCustom {
  readonly attachments: AttachmentsApi;
  readonly auditLogApi: AuditLogApiApi;
  readonly batchApi: BatchApiApi;
  readonly customFieldSettings: CustomFieldSettingsApi;
  readonly customFields: CustomFieldsApi;
  readonly events: EventsApi;
  readonly goalRelationships: GoalRelationshipsApi;
  readonly goals: GoalsApi;
  readonly jobs: JobsApi;
  readonly memberships: MembershipsApi;
  readonly organizationExports: OrganizationExportsApi;
  readonly portfolioMemberships: PortfolioMembershipsApi;
  readonly portfolios: PortfoliosApi;
  readonly projectBriefs: ProjectBriefsApi;
  readonly projectMemberships: ProjectMembershipsApi;
  readonly projectStatuses: ProjectStatusesApi;
  readonly projectTemplates: ProjectTemplatesApi;
  readonly projects: ProjectsApi;
  readonly rules: RulesApi;
  readonly sections: SectionsApi;
  readonly statusUpdates: StatusUpdatesApi;
  readonly stories: StoriesApi;
  readonly tags: TagsApi;
  readonly taskTemplates: TaskTemplatesApi;
  readonly tasks: TasksApi;
  readonly teamMemberships: TeamMembershipsApi;
  readonly teams: TeamsApi;
  readonly timePeriods: TimePeriodsApi;
  readonly timeTrackingEntries: TimeTrackingEntriesApi;
  readonly typeahead: TypeaheadApi;
  readonly userTaskLists: UserTaskListsApi;
  readonly users: UsersApi;
  readonly webhooks: WebhooksApi;
  readonly workspaceMemberships: WorkspaceMembershipsApi;
  readonly workspaces: WorkspacesApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.attachments = new AttachmentsApi(configuration);
    this.auditLogApi = new AuditLogApiApi(configuration);
    this.batchApi = new BatchApiApi(configuration);
    this.customFieldSettings = new CustomFieldSettingsApi(configuration);
    this.customFields = new CustomFieldsApi(configuration);
    this.events = new EventsApi(configuration);
    this.goalRelationships = new GoalRelationshipsApi(configuration);
    this.goals = new GoalsApi(configuration);
    this.jobs = new JobsApi(configuration);
    this.memberships = new MembershipsApi(configuration);
    this.organizationExports = new OrganizationExportsApi(configuration);
    this.portfolioMemberships = new PortfolioMembershipsApi(configuration);
    this.portfolios = new PortfoliosApi(configuration);
    this.projectBriefs = new ProjectBriefsApi(configuration);
    this.projectMemberships = new ProjectMembershipsApi(configuration);
    this.projectStatuses = new ProjectStatusesApi(configuration);
    this.projectTemplates = new ProjectTemplatesApi(configuration);
    this.projects = new ProjectsApi(configuration);
    this.rules = new RulesApi(configuration);
    this.sections = new SectionsApi(configuration);
    this.statusUpdates = new StatusUpdatesApi(configuration);
    this.stories = new StoriesApi(configuration);
    this.tags = new TagsApi(configuration);
    this.taskTemplates = new TaskTemplatesApi(configuration);
    this.tasks = new TasksApi(configuration);
    this.teamMemberships = new TeamMembershipsApi(configuration);
    this.teams = new TeamsApi(configuration);
    this.timePeriods = new TimePeriodsApi(configuration);
    this.timeTrackingEntries = new TimeTrackingEntriesApi(configuration);
    this.typeahead = new TypeaheadApi(configuration);
    this.userTaskLists = new UserTaskListsApi(configuration);
    this.users = new UsersApi(configuration);
    this.webhooks = new WebhooksApi(configuration);
    this.workspaceMemberships = new WorkspaceMembershipsApi(configuration);
    this.workspaces = new WorkspacesApi(configuration);
  }

}
